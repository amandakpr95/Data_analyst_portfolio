## In this scenario, I am a junior data analyst working for a hotel booking 
## company. I have been asked to clean a .csv file that was created after 
## querying a database to combine two different tables from different hotels. 
## In order to learn more about this data, I need to preview the data's 
## structure and clean the data in preparation for analysis

install.packages("tidyverse")   #install packages to work with the data
install.packages("skimr")
install.packages("janitor")
library(tidyverse)              #load packages
library(skimr)
library(janitor)
bookings_df <- read_csv("hotel_bookings.csv") #load the .csv file into R
skim_without_charts(bookings_df) # quickly view the data to get understanding

## Let's say I am priamrily interested in the following variables: 'hotel', 
## 'is_canceled', and 'lead_time'. So let's create a new data frame with just
## those variables.

trimmed_df <- bookings_df %>%
  select('hotel', 'is_canceled', 'lead_time')

## Just to be crystal clear about the 'hotel' variable, I'm going to rename it.

trimmed_df %>%
  rename(hotel_type = hotel)

View(bookings_df)

## To make the original df a little more simple, I am going to combine the two 
## columns 'arrival_date_year' and 'arrival_date_moth' into one 'arrival_month_year'

bookings_df %>%
  unite(arrival_month_year, c("arrival_date_month", "arrival_date_year"))

## Let's say that instead of viewing the guests separately as they are now, we 
## wanted to know all the guests for a given reservation. I would create a new 
## column with that information

bookings_df_2 <- bookings_df %>%
  mutate(total_guests = adults + children + babies)

colnames(bookings_df_2)

## Now if we wanted to know the total number of canceled bookings and the average
## lead time for booking, I could create two more columns to calculate that.

bookings_df_3 <- bookings_df %>%
  select(is_canceled, lead_time) %>%
  mutate(number_canceled = sum(is_canceled)) %>%
  mutate(average_lead_time = mean(lead_time))

head(bookings_df_3) 

## Let's say we wanted to arrange the data by most lead time to least lead time
## in order to focus on the bookings made far in advance. 

arrange(bookings_df, -lead_time)   # we can see that the largest lead time is 737
max(bookings_df$lead_time)         # we can also quickly return the max and min
min(bookings_df$lead_time)         # lead time with the following functions

## If we wanted to know the average lead time, for example, to know when to run
## promotions for the hotel, we can do that too.

mean(bookings_df$lead_time)        # the average lead time is 104

## If we then wanted to see the average lead time by city we can run the following

city_bookings_df <- filter(bookings_df, bookings_df$hotel == "City Hotel")  #here we create a new df
mean(city_bookings_df$lead_time) # the average lead time for city hotels is 109.7

## Now if we wanted to compare the city vs the resort hotel lead times and get more 
## information on the lead times we could do the following:

bookings_summary <-                                   # create a new df
  bookings_df %>%                                     # with info from the first df
  group_by(hotel) %>%                                 # organize it by hotel type
  summarize(average_lead_time = mean(lead_time),      # summarize the average lead time
            min_lead_time = min(lead_time),           # the min lead time
            max_lead_time = max(lead_time))           # and the max lead time

head(bookings_summary)                                # view the results! city lead times are longer on average than resort lead times.

##Now I'll want to share these insights with my stakeholders, so I'll create a data viz with ggplot2

ggplot(data = bookings_summary) +
  geom_col(mapping = aes(fill = hotel, x = hotel, y = average_lead_time))

## My stakeholder then asks me which distribution channel is best for attracting users.
## I can create another graph to highlight any trends. 

ggplot(data = bookings_df) +                            # determines what df to pull data from
  geom_bar(mapping = aes(x = distribution_channel))     # makes a bar graph with the distribution channel on the x axis and the number of bookings on the y axis

## We can see here that the distribution channel with the highest number of bookings is "TA/TO".
## My stakeholder is then interested if a deposit affected these results.

ggplot(data = bookings_df) +                            # determines what df to pull data from
  geom_bar(mapping = aes(x = distribution_channel)) +   # makes a bar graph, as described above
  facet_wrap(~deposit_type) +                           # creates three bar graphs with deposit type as a third variable
  theme(axis.text.x = element_text(angle = 45))         # angles the text on the x axis at a 45 degree angle for better readability

## We can see that the "No Deposit" group had the highest number of bookings for all distribution channels. 
## Suppose now my stakeholder wants to run a family-friendly promotion targeting key market segments. 
## The stakeholder wants to know if hotel type affects which market segment books. 
## Therefore I can create a bar char showing each hotel type and market segment.

ggplot(data = bookings_df) + 
  geom_bar(mapping = aes(x = hotel)) +
  facet_wrap(~market_segment) +
  theme(axis.text.x = element_text(angle = 45))

## Now my stakeholder has a better idea of the market. They decide to advertise a promotion to families
## that make online bookings for city hotels.
## They ask to see the relationship between lead time and families traveling for online bookings at city hotels.

onlineta_city_hotels <- bookings_df %>%              # create a new df 
  filter(hotel=="City Hotel") %>%                    # filter for only "City Hotels" and
  filter(market_segment=="Online TA")                # filter for only "Online TA"

View(onlineta_city_hotels)

ggplot(data = onlineta_city_hotels) + 
  geom_point(mapping = aes(x = children, y = lead_time))
